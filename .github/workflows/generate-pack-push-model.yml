name: Generate - Pack - Push Model

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'  # specify your dotnet version

      - name: Restore dependencies for all projects
        run: dotnet restore

      # Step 1: Run DWIS.MicroState.JsonSD project
      - name: Run DWIS.MicroState.JsonSD
        run: dotnet run --project ./DWIS.MicroState.JsonSD

      # Step 2: Commit and push changes from DWIS.MicroState.JsonSchema folder
      - name: Commit changes to DWIS.MicroState.JsonSchema
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add DWIS.MicroState.JsonSchema/*
          git commit -m "Update JsonSchema files"
          git push origin main
        continue-on-error: true  # This allows the job to continue even if there are no changes

      # Step 3: Run DWIS.MicroState.JsonCS project
      - name: Run DWIS.MicroState.JsonCS
        run: dotnet run --project ./DWIS.MicroState.JsonCS

      # Step 4: Commit and push changes to MicroStatesFromJson.cs
      - name: Commit changes to DWIS.MicroState.ModelShared
        run: |
          git add DWIS.MicroState.ModelShared/MicroStatesFromJson.cs
          git commit -m "Update MicroStatesFromJson.cs"
          git push origin main
        continue-on-error: true  # This allows the job to continue even if there are no changes
      
      # Step 5: change the nuget versions
      - name: Install GitVersion
        run: dotnet tool install --global GitVersion.Tool

      - name: Run GitVersion
        id: gitversion
        run: gitversion /output json /showvariable FullSemVer

      - name: Update version in DWIS.MicroState.Model
        run: sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.gitversion.outputs.FullSemVer }}<\/Version>/" DWIS.MicroState.Model/DWIS.MicroState.Model.csproj

      - name: Update version in DWIS.MicroState.ModelShared
        run: sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.gitversion.outputs.FullSemVer }}<\/Version>/" DWIS.MicroState.ModelShared/DWIS.MicroState.ModelShared.csproj

      - name: Commit version changes
        run: |
          git add DWIS.MicroState.Model/*.csproj
          git add DWIS.MicroState.ModelShared/*.csproj
          git commit -m "Bump version to ${{ steps.gitversion.outputs.FullSemVer }}"
          git push origin main
        continue-on-error: true

      # Step 6: Build and package DWIS.MicroState.Model and DWIS.MicroState.ModelShared
      - name: Build projects
        run: |
          dotnet build ./DWIS.MicroState.Model --configuration Release
          dotnet build ./DWIS.MicroState.ModelShared --configuration Release

      # Step 7: Pack the project for NuGet
      - name: Pack NuGet package
        run: |
          dotnet pack ./DWIS.MicroState.Model --configuration Release
          dotnet pack ./DWIS.MicroState.ModelShared --configuration Release

      # Step 8: Push packages to NuGet.org
      - name: Publish to NuGet
        run: |
          dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}