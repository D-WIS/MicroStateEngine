//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.9.0.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace DWIS.MicroState.ModelShared
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class MicroStates
    {
        [Newtonsoft.Json.JsonProperty("TimeStampUTC", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset TimeStampUTC { get; set; }

        [Newtonsoft.Json.JsonProperty("Part1", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Part1 { get; set; }

        [Newtonsoft.Json.JsonProperty("Part2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Part2 { get; set; }

        [Newtonsoft.Json.JsonProperty("Part3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Part3 { get; set; }

        [Newtonsoft.Json.JsonProperty("Part4", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Part4 { get; set; }

        [Newtonsoft.Json.JsonProperty("Part5", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Part5 { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Thresholds
    {
        [Newtonsoft.Json.JsonProperty("TimeStampUTC", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset TimeStampUTC { get; set; }

        [Newtonsoft.Json.JsonProperty("StableAxialVelocityTopOfStringThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableAxialVelocityTopOfStringThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableRotationalVelocityTopOfStringThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableRotationalVelocityTopOfStringThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableFlowTopOfStringThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableFlowTopOfStringThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableTensionTopOfStringThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableTensionTopOfStringThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("AtmosphericPressureThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double AtmosphericPressureThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StablePressureTopOfStringThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StablePressureTopOfStringThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableTorqueTopOfStringThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableTorqueTopOfStringThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableFlowAnnulusOutletThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableFlowAnnulusOutletThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableBottomOfStringRockForceThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableBottomOfStringRockForceThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableRotationalVelocityBottomOfStringThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableRotationalVelocityBottomOfStringThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableAxialVelocityBottomOfStringThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableAxialVelocityBottomOfStringThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableFlowBottomOfStringThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableFlowBottomOfStringThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableFlowHoleOpenerThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableFlowHoleOpenerThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("MinimumTensionTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double MinimumTensionTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("MinimumPressureFloatValve", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double MinimumPressureFloatValve { get; set; }

        [Newtonsoft.Json.JsonProperty("StableFlowBoosterPumpThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableFlowBoosterPumpThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableFlowBackPressurePumpThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableFlowBackPressurePumpThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("MinimumDifferentialPressureRCDSealingThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double MinimumDifferentialPressureRCDSealingThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("MinimumDifferentialPressureSealBalanceThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double MinimumDifferentialPressureSealBalanceThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableFlowFillPumpDGDThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableFlowFillPumpDGDThreshold { get; set; }

        [Newtonsoft.Json.JsonProperty("StableFlowLiftPumpDGDThreshold", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StableFlowLiftPumpDGDThreshold { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Signals
    {
        [Newtonsoft.Json.JsonProperty("TimeStampUTC", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset TimeStampUTC { get; set; }

        [Newtonsoft.Json.JsonProperty("MaximumBindingRefreshInterval", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.TimeSpan MaximumBindingRefreshInterval { get; set; }

        [Newtonsoft.Json.JsonProperty("AxialVelocityTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue AxialVelocityTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationAxialVelocityTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationAxialVelocityTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("RotationalVelocityTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue RotationalVelocityTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationRotationalVelocityTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationRotationalVelocityTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationFlowTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationFlowTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("TensionTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue TensionTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("ForceBottomTopDrive", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue ForceBottomTopDrive { get; set; }

        [Newtonsoft.Json.JsonProperty("ForceElevator", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue ForceElevator { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationTensionTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationTensionTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("PressureTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue PressureTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationPressureTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationPressureTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("TorqueTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue TorqueTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationTorqueTopOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationTorqueTopOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowAnnulusOutlet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowAnnulusOutlet { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationFlowAnnulusOutlet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationFlowAnnulusOutlet { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowCuttingsAnnulusOutlet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowCuttingsAnnulusOutlet { get; set; }

        [Newtonsoft.Json.JsonProperty("ForceBottomOfStringOnRock", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue ForceBottomOfStringOnRock { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationForceBottomOfStringOnRock", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationForceBottomOfStringOnRock { get; set; }

        [Newtonsoft.Json.JsonProperty("ForceHoleOpenerOnRock", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue ForceHoleOpenerOnRock { get; set; }

        [Newtonsoft.Json.JsonProperty("RotationaVelocityBottomOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue RotationaVelocityBottomOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationRotationalVelocityBottomOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationRotationalVelocityBottomOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowCuttingsBottomHole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowCuttingsBottomHole { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowCuttingsTopOfRateHole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowCuttingsTopOfRateHole { get; set; }

        [Newtonsoft.Json.JsonProperty("AxialVelocityBottomOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue AxialVelocityBottomOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationAxialVelocityBottomOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationAxialVelocityBottomOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowBottomOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowBottomOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("StableFlowBottomOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StableFlowBottomOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowHoleOpener", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowHoleOpener { get; set; }

        [Newtonsoft.Json.JsonProperty("StableFlowHoleOpener", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StableFlowHoleOpener { get; set; }

        [Newtonsoft.Json.JsonProperty("ForceOnLedge", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue ForceOnLedge { get; set; }

        [Newtonsoft.Json.JsonProperty("ForceOnCuttingsBed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue ForceOnCuttingsBed { get; set; }

        [Newtonsoft.Json.JsonProperty("ForceDifferentialSticking", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue ForceDifferentialSticking { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowFluidFromOrToFormation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowFluidFromOrToFormation { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowFormationFluidAnnulusOutlet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowFormationFluidAnnulusOutlet { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowCavingsFromFormation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowCavingsFromFormation { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowCavingsAnnulusOutlet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowCavingsAnnulusOutlet { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowPipeToAnnulus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowPipeToAnnulus { get; set; }

        [Newtonsoft.Json.JsonProperty("WhirlRateBottomOfString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue WhirlRateBottomOfString { get; set; }

        [Newtonsoft.Json.JsonProperty("WhirlRateHoleOpener", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue WhirlRateHoleOpener { get; set; }

        [Newtonsoft.Json.JsonProperty("DifferentialPressureFloatValve", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue DifferentialPressureFloatValve { get; set; }

        [Newtonsoft.Json.JsonProperty("UnderReamerOpen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfBooleanValue UnderReamerOpen { get; set; }

        [Newtonsoft.Json.JsonProperty("CirculationSubOpen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfBooleanValue CirculationSubOpen { get; set; }

        [Newtonsoft.Json.JsonProperty("PortedFloatOpen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfBooleanValue PortedFloatOpen { get; set; }

        [Newtonsoft.Json.JsonProperty("WhipstockAttached", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfBooleanValue WhipstockAttached { get; set; }

        [Newtonsoft.Json.JsonProperty("PlugAttached", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfBooleanValue PlugAttached { get; set; }

        [Newtonsoft.Json.JsonProperty("LinerAttached", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfBooleanValue LinerAttached { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowBoosterPump", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowBoosterPump { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationFlowBoosterPump", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationFlowBoosterPump { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowBackPressurePump", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowBackPressurePump { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationFlowBackPressurePump", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationFlowBackPressurePump { get; set; }

        [Newtonsoft.Json.JsonProperty("OpeningMPDChoke", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue OpeningMPDChoke { get; set; }

        [Newtonsoft.Json.JsonProperty("DifferentialPressureRCD", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue DifferentialPressureRCD { get; set; }

        [Newtonsoft.Json.JsonProperty("IsolationSealActivated", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfBooleanValue IsolationSealActivated { get; set; }

        [Newtonsoft.Json.JsonProperty("DifferentialPressureIsolationSeal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue DifferentialPressureIsolationSeal { get; set; }

        [Newtonsoft.Json.JsonProperty("BearingAssemblyLatched", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfBooleanValue BearingAssemblyLatched { get; set; }

        [Newtonsoft.Json.JsonProperty("ScreenMPDChokePlugged", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfBooleanValue ScreenMPDChokePlugged { get; set; }

        [Newtonsoft.Json.JsonProperty("MainFlowPathMPDEstablished", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfBooleanValue MainFlowPathMPDEstablished { get; set; }

        [Newtonsoft.Json.JsonProperty("AlternateFlowPathMPDEstablished", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfBooleanValue AlternateFlowPathMPDEstablished { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowFillPumpDGD", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowFillPumpDGD { get; set; }

        [Newtonsoft.Json.JsonProperty("FlowLiftPumpDGD", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue FlowLiftPumpDGD { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationFlowFillPumpDGD", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationFlowFillPumpDGD { get; set; }

        [Newtonsoft.Json.JsonProperty("StandardDeviationFlowLiftPumpDGD", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReadableReferenceOfScalarValue StandardDeviationFlowLiftPumpDGD { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class ReadableReferenceOfScalarValue
    {
        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("PlainTextSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PlainTextSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("LatexSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LatexSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("ID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid ID { get; set; }

        [Newtonsoft.Json.JsonProperty("SparQLQuery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SparQLQuery { get; set; }

        [Newtonsoft.Json.JsonProperty("SemanticDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SemanticGraph SemanticDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("RootConcept", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Concept RootConcept { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class SemanticGraph
    {
        [Newtonsoft.Json.JsonProperty("Facts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Statement> Facts { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Statement
    {
        [Newtonsoft.Json.JsonProperty("Subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Concept Subject { get; set; }

        [Newtonsoft.Json.JsonProperty("Verb", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Predicate Verb { get; set; }

        [Newtonsoft.Json.JsonProperty("Object", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Concept Object { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Concept
    {
        [Newtonsoft.Json.JsonProperty("DisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ConceptType Type { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class ConceptType
    {
        [Newtonsoft.Json.JsonProperty("DisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [Newtonsoft.Json.JsonProperty("Generalization", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ConceptType Generalization { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Predicate
    {
        [Newtonsoft.Json.JsonProperty("DisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [Newtonsoft.Json.JsonProperty("Generalization", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Predicate Generalization { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class ReadableReferenceOfBooleanValue
    {
        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("PlainTextSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PlainTextSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("LatexSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LatexSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("ID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid ID { get; set; }

        [Newtonsoft.Json.JsonProperty("SparQLQuery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SparQLQuery { get; set; }

        [Newtonsoft.Json.JsonProperty("SemanticDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SemanticGraph SemanticDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("RootConcept", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Concept RootConcept { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum MicroStateIndex
    {

        AxialVelocityTopOfString = 0,


        StableAxialVelocityTopOfString = 1,


        RotationalVelocityTopOfString = 2,


        StableRotationalVelocityTopOfString = 3,


        FlowAtTopOfString = 4,


        StableFlowAtTopOfString = 5,


        SlipState = 6,


        StableTensionTopOfString = 7,


        PressureTopOfString = 8,


        StablePressureTopOfString = 9,


        TorqueTopOfString = 10,


        StableTorqueTopOfString = 11,


        FlowAtAnnulusOutlet = 12,


        StableFlowAtAnnulusOutlet = 13,


        CuttingsReturnAtAnnulusOutlet = 14,


        OnBottomBottomOfString = 15,


        StableBottomOfStringRockForce = 16,


        OnBottomHoleOpener = 17,


        RotationalVelocityBottomOfString = 18,


        StableRotationalVelocityBottomOfString = 19,


        Drilling = 20,


        HoleOpening = 21,


        AxialVelocityBottomOfString = 22,


        StableAxialVelocityBottomOfString = 23,


        FlowBottomOfString = 24,


        StableFlowBottomOfString = 25,


        FlowHoleOpener = 26,


        StableFlowHoleOpener = 27,


        LedgeKeySeat = 28,


        CuttingsBed = 29,


        DifferentialSticking = 30,


        TwistOffBackOff = 31,


        WellIntegrity = 32,


        FormationFluidAtAnnulusOutlet = 33,


        FormationCollapse = 34,


        CavingsAtAnnulusOutlet = 35,


        PipeWashout = 36,


        WhirlBottomOfString = 37,


        WhirlHoleOpener = 38,


        FloatSub = 39,


        UnderReamer = 40,


        CirculationSub = 41,


        PortedFloat = 42,


        Whipstock = 43,


        Plug = 44,


        Liner = 45,


        BoosterPumping = 46,


        StableBoosterPumping = 47,


        BackPressurePumping = 48,


        StableBackPressurePumping = 49,


        MPDChokeOpening = 50,


        RCDSealing = 51,


        IsolationSeal = 52,


        IsolationSealPressureBalance = 53,


        BearingAssemblyLatched = 54,


        ScreenMPDChokePlugged = 55,


        FlowPathStable = 56,


        FillPumpDGD = 57,


        LiftPumpDGD = 58,


        StableFillPumpDGD = 59,


        StableLiftPumpDGD = 60,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class TupleOfMicroStatesAndThresholdsAndSignalsAndMicroStateIndex
    {
        [Newtonsoft.Json.JsonProperty("Item1", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public MicroStates Item1 { get; set; }

        [Newtonsoft.Json.JsonProperty("Item2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Thresholds Item2 { get; set; }

        [Newtonsoft.Json.JsonProperty("Item3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Signals Item3 { get; set; }

        [Newtonsoft.Json.JsonProperty("Item4", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public MicroStateIndex Item4 { get; set; }


    }
}
